#include <QApplication>
#include <QDesktopWidget>
#include <QHeaderView>
#include <QFile>
#include <QSplitter>
#include <QDir>
#include <QSound>

#include "taskconfig\taskconfig.h"
#include "modulevar.h"
#include "moduleconst.h"



// Структура, несущая информацию о текущем ТС, его типе, номере и т.п.
currentTS aTS;

// Коды типов ТС
int aTSTypeSGAid;
int aTSTypeGVSid;
int aTSTypeBDDid;
int aTSTypeNPAid;
int aTSTypeSJOid;

// Наименование типов ТС
QString aTSTypeSGA;
QString aTSTypeGVS;
QString aTSTypeBDD;
QString aTSTypeNPA;
QString aTSTypeSJO;

// Переменные путей------------------------------
QString aDirStr;
QDir aDir;

// Переменные цветов-----------------------------
QColor aPohodColor;     // Цвет "по-походному"
QColor aReadyColor;     // Цвет 'Готов'
QColor aNotReadyColor;  // Цвет 'Не Готов'
QColor aAvarColor;      // Цвет 'Аварийное состояние'
QColor aSelectColor;    // Цвет 'Выделение активного компонента'

// Переменные звуков-----------------------------
QString aAvarSound;     // Звуковой сигнал "Аварийное состояние" (путь к файлу .wav)
bool aSoundOn;         // Признак - Звуки Включены/Отключены (true/false)
int aNumSoundRepeat;  // Количество повторов сирены


    //----------------------------------------------------------------------------------------------
   // Функции 'Сеттер-Геттер'
  //------------------------------------------------------------------------------------------------
 //-------------------------------------------------------------------------------------------------
// Рабочая база данных
QSqlDatabase getDbName()
{
    return QSqlDatabase::database();
}

//-------------------------------------------------------------------------------------------------
//---Текущий ТС с которым ведется работа
currentTS getCurrentTS()
{
    return aTS;
}

//-------------------------------------------------------------------------------------------------

void setCurrentTS(QString tpTS, int tpTSid, QString nmTS, int noTS, int zvTS)
{
    aTS.typeTS = tpTS;
    aTS.typeTSid = tpTSid;
    aTS.nameTS = nmTS;
    aTS.nomTS = noTS;
    aTS.zavnomTS = zvTS;
}

//-------------------------------------------------------------------------------------------------


void setTSSGA(QString tstype)
{
    aTSTypeSGA = tstype;
}

//-------------------------------------------------------------------------------------------------
QString getTSSGA()
{
    return aTSTypeSGA;
}
//-------------------------------------------------------------------------------------------------

void setTSGVS(QString tstype)
{
    aTSTypeGVS = tstype;
}

//-------------------------------------------------------------------------------------------------
QString getTSGVS()
{
    return aTSTypeGVS;
}
//-------------------------------------------------------------------------------------------------
void setTSBDD(QString tstype)
{
    aTSTypeBDD = tstype;
}

//-------------------------------------------------------------------------------------------------
QString getTSBDD()
{
    return aTSTypeBDD;
}
//-------------------------------------------------------------------------------------------------
void setTSNPA(QString tstype)
{
    aTSTypeNPA = tstype;
}

//-------------------------------------------------------------------------------------------------
QString getTSNPA()
{
    return aTSTypeNPA;
}
//-------------------------------------------------------------------------------------------------
void setTSSJO(QString tstype)
{
    aTSTypeSJO = tstype;
}

//-------------------------------------------------------------------------------------------------
QString getTSSJO()
{
    return aTSTypeSJO;
}
//-------------------------------------------------------------------------------------------------

void setTSBDDid(int idtstype)
{
    aTSTypeBDDid = idtstype;
}

//-------------------------------------------------------------------------------------------------
int getTSBDDid()
{
    return aTSTypeBDDid;
}
//-------------------------------------------------------------------------------------------------
void setTSGVSid(int idtstype)
{
    aTSTypeGVSid = idtstype;
}
//-------------------------------------------------------------------------------------------------
int getTSGVSid()
{
    return aTSTypeGVSid;
}
//-------------------------------------------------------------------------------------------------
void setTSNPAid(int idtstype)
{
    aTSTypeNPAid = idtstype;
}
//-------------------------------------------------------------------------------------------------
int getTSNPAid()
{
    return aTSTypeNPAid;
}
//-------------------------------------------------------------------------------------------------
void setTSSGAid(int idtstype)
{
    aTSTypeSGAid = idtstype;
}
//-------------------------------------------------------------------------------------------------
int getTSSGAid()
{
    return aTSTypeSGAid;
}
//-------------------------------------------------------------------------------------------------
void setTSSJOid(int idtstype)
{
    aTSTypeSJOid = idtstype;
}
//-------------------------------------------------------------------------------------------------
int getTSSJOid()
{
    return aTSTypeSJOid;
}
//-------------------------------------------------------------------------------------------------


//-------------------------------------------------------------------------------------------------
//-Пути
//-------------------------------------------------------------------------------------------------

 // Динамический каталог
// возвращает строковый путь в динамическом каталоге к файлу cfg с общими настройками программы (r4102_spts.cfg)
QString getDinStrProgSetFilePath()
{
   aDirStr = qTC->getWorkPath() + ProgSetFile;
   return aDirStr;
}

//-------------------------------------------------------------------------------------------------

// возвращает QDir путь в динамическом каталоге к файлу cfg с общими настройками программы (r4102_spts.cfg)
QDir getDinDirProgSetFilePath()
{
   aDir = qTC->getWorkPath() + ProgSetFile;
   return aDir;
}

//-------------------------------------------------------------------------------------------------

// возвращает строковый путь в динамическом каталоге к файлу cfg с настройками форм (r4102_spts_frm.cfg)
QString getDinStrFormSetFilePath()
{
   aDirStr = qTC->getWorkPath() + FormSetFile;
   return aDirStr;
}

//-------------------------------------------------------------------------------------------------

// возвращает QDir путь в динамическом каталоге к файлу cfg с настройками форм (r4102_spts_frm.cfg)
QDir getDinDirFormSetFilePath()
{
  aDir = qTC->getWorkPath() + ProgSetFile;
  return aDir;
}

//-----------------------------------------------


// Статический каталог

// возвращает строковый путь в статическом каталоге к файлу cfg с общими настройками программы (r4102_spts.cfg)
QString getStatStrProgSetFilePath()
{
   aDirStr = qTC->getStaticDataPath() + ProgSetFile;
   return aDirStr;
}

//-------------------------------------------------------------------------------------------------

// возвращает QDir путь в статическом каталоге к файлу cfg с общими настройками программы (r4102_spts.cfg)
QDir getStatDirProgSetFilePath()
{
   aDir = qTC->getStaticDataPath() + ProgSetFile;
   return aDir;
}

//-------------------------------------------------------------------------------------------------

// возвращает строковый путь в статическом каталоге к файлу cfg с настройками форм (r4102_spts_frm.cfg)
QString getStatStrFormSetFilePath()
{
   aDirStr = qTC->getStaticDataPath() + FormSetFile;
   return aDirStr;
}

//-------------------------------------------------------------------------------------------------

// возвращает QDir путь в статическом каталоге к файлу cfg с настройками форм (r4102_spts_frm.cfg)
QDir getStatDirFormSetFilePath()
{
  aDir = qTC->getStaticDataPath() + ProgSetFile;
  return aDir;
}
//-------------------------------------------------------------------------------------------------




//-------------------------------------------------------------------------------------------------
//-ЦВЕТЫ
//-------------------------------------------------------------------------------------------------

QColor getPohodColor()
{
    return aPohodColor;
}

//-------------------------------------------------------------------------------------------------

void setPohodColor(const QColor color)
{
    aPohodColor = color;
}

//-------------------------------------------------------------------------------------------------

QColor getReadyColor()
{
    return aReadyColor;
}

//----------------------------------------------------------------------------------------------

void setReadyColor(const QColor color)
{
    aReadyColor = color;
}

//----------------------------------------------------------------------------------------------
QColor getNotReadyColor()
{
    return aNotReadyColor;
}

//----------------------------------------------------------------------------------------------

void setNotReadyColor(const QColor color)
{
    aNotReadyColor = color;
}

//----------------------------------------------------------------------------------------------
QColor getAvarColor()
{
    return aAvarColor;
}

//----------------------------------------------------------------------------------------------

void setAvarColor(const QColor color)
{
    aAvarColor = color;
}

//----------------------------------------------------------------------------------------------
QColor getSelectColor()
{
    return aSelectColor;
}

//----------------------------------------------------------------------------------------------

void setSelectColor(const QColor color)
{
    aSelectColor = color;
}


//----------------------------------------------------------------------------------------------
//---Звуки
//----------------------------------------------------------------------------------------------
QString getAvarSoundPath()
{
    return aAvarSound;
}

//----------------------------------------------------------------------------------------------

void setAvarSoundPath(QString avarsoundfile)
{
    aAvarSound = avarsoundfile;
}

//----------------------------------------------------------------------------------------------
bool getSoundOn()
{
    return aSoundOn;
}

//----------------------------------------------------------------------------------------------
void setSoundOn(bool SoundOn)
{
    aSoundOn = SoundOn;
}

//----------------------------------------------------------------------------------------------
int getNumSoundRepeat()
{
    return aNumSoundRepeat;
}

//----------------------------------------------------------------------------------------------
void setNumSoundRepeat(int numsoundrepeat)
{
    aNumSoundRepeat = numsoundrepeat;
}

//----------------------------------------------------------------------------------------------
